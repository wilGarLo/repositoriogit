package map;

public class Contacto {
	String nombre;
	String apellido;
	Integer celular;

	public Contacto(String nombre, String apellido, Integer celular) {
		super();
		this.nombre = nombre;
		this.apellido = apellido;
		this.celular = celular;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public String getApellido() {
		return apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	public Integer getCelular() {
		return celular;
	}

	public void setCelular(Integer celular) {
		this.celular = celular;
	}

	@Override
	public String toString() {
		return nombre + "\t " + apellido + "\t" + celular;
	}

}
***************************************************************************************************************
package map;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.TreeSet;

public class MenuContacto {
	static Scanner leer = new Scanner(System.in);

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<Contacto> nuevo = new ArrayList<Contacto>();
		int opc;
		opc = 1;
		do {
			opc = menu();
			switch (opc) {
			case 1:
				System.out.println("nombre");
				String nombre = leer.next();
				System.out.println("apellido");
				String apellido = leer.next();
				System.out.println("celular");
				Integer celular = leer.nextInt();
				Contacto a = new Contacto(nombre, apellido, celular);
				nuevo.add(a);
				break;
			case 2:
				Iterator<Contacto> it = nuevo.iterator();
				while (it.hasNext()) {
					System.out.println(it.next());
				}
				break;

			case 3:
				System.out.println("posicion a editar");
				Integer pos = leer.nextInt();
				System.out.println("nombre");
				String nom = leer.next();
				System.out.println("apellido");
				String ape = leer.next();
				System.out.println("celular");
				Integer cel = leer.nextInt();
				Contacto b = new Contacto(nom, ape, cel);
				nuevo.set(pos, b);// con el set se edita
				break;
			case 4:
				System.out.println("posicion a iliminar");
				Integer posi = leer.nextInt();
				nuevo.remove(posi);
				break;
			case 5:
				break;
			case 6:
				TreeSet<Contacto> viejo = new TreeSet<Contacto>();

				break;
			case 7:
				System.out.println("fin del programa");
				break;

			default:
				System.out.println("opcion invalida");
				break;
			}
		} while (opc != 7);

	}

	private static int menu() {
		System.out.println("======================MENU==================");
		System.out.println("1. ingresar");
		System.out.println("2. LIstar");
		System.out.println("3. Editar");
		System.out.println("4. Eliminar");
		System.out.println("5. Buscar");
		System.out.println("6. Ordenar");
		System.out.println("7. Salir");
		System.out.println("ingresar opcion");
		int opcion = leer.nextInt();
		return opcion;
	}

}
